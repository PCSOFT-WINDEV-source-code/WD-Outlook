#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : GlobalProcedures
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1388cb3a0173f449
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  internal_properties : CAAAAAgAAABPOo5wfzL5PtlmH9g6pVlcqG1md+uM4GM8B/k/aVja5R6ZseBzxTGWZbo12UeE8bWym5Rl91AKrNq9wTYnFyamg2lAMw==
  type_code : 31
  p_codes : []
  procedures :
   -
     name : AddAttachment
     internal_properties : CAAAAAgAAAA6tWYwX64/uVRka6n2iPOqBTIe8ualAcbuMBBJuc4ihzBtO8r5SAQ5HkbSELZUoRr+DoZbHiSxQz6asWZsOkx99UYwJFDs265kDC69RdLZgrckBNK2myC/TWL9zWh17Uj0IzSoXX4CvfHsJxgZEXxlaig+i0UO6Q7BPl3pjmYm10OdxReUN2bDudZ4QOWhRHkbdIdmudI=
     procedure_id : 1407598333546263625
     type_code : 15
     code : |1-
      // Summary: // Adds the requested attachment to the current message in the temporary array.
      // (Effective addition in Outlook during the send operations)
      // Syntax:
      //AddAttachment (<sNameAT>)
      //
      // Parameters:
      // 	sNameAT: Attachment to add
      // Return value:
      // 	None
      
      procedure AddAttachment(sATName)
      
      // File name without path
      sLastName is string = fExtractPath(sATName,fFile+fExtension)
      
      // Copy into the directory of attachments
      fCopyFile(sATName,gsTempDirATT + sLastName)
      
      // Element already found?
      i is int
      for i=1 _to_ Email.NbAttach
      	if Email.Attach[i]~=sLastName then return
      end
      // Refresh the initial table
      Email.NbAttach++
      Email.Attach[Email.NbAttach] = gsTempDirATT + sLastName
     type : 458752
   -
     name : DeleteAttachment
     internal_properties : CAAAAAgAAACMnl/jXWKrSdt8sCh/GN8DwGijRvYhN8U9zNrXf9EcUIyxLcpCBcfv+5k/yGU62LIpZNTd23AFk3ac74rdgMhKZ9n18WSRaL1pcnI6WLe7QbPl/Nx/jgbmxZZ/eJN6c1mGiDDmZnf+dt+W75uinFyYYPtIO7x9AWu1Xt+o4ykW/ruwkR258NiCjR5SIVhu6bHBjkQZKQ==
     procedure_id : 1407598333546329161
     type_code : 15
     code : |1+
      // Summary: Deletes the requested attachment from the current message in the temporary array. 
      // (Effective addition in Outlook during the send operations)
      // Syntax:
      //DeleteAttachment (<sNameAT>)
      //
      // Parameters:
      // 	sNameAT: Attachment to delete
      // Return value:
      // 	None
      
      procedure DeleteAttachment(sATName)
      
      i		is int
      
      // Temporary work table
      stabATT	is array dynamic of strings
      
      for i=1 _to_ Email.NbAttach
      	
      	if not Email.Attach[i]~=sATName then
      		// Adds the element to the array
      		Dimension(stabATT,Dimension(stabATT)+1)
      		stabATT[Dimension(stabATT)]=Email.Attach[i]
      	end
      	
      end
      
      // Recreates the initial array
      for i=1 _to_ Dimension(stabATT)
      	Email.Attach[i]=stabATT[i]
      end
      
      Email.NbAttach=Dimension(stabATT)
     type : 458752
   -
     name : PositionOnTask
     procedure_id : 1407598333546394697
     type_code : 15
     code : |1-
      // Summary: Positions on the task whose identifier is passed in parameter
      // Syntax:
      //[ <Result> = ] PositionOnTask (<sIDTask>)
      //
      // Parameters:
      //	sIDTask: Identifier of the task onto which we want to be positioned
      // Return value:
      // 	boolean: True if it was found, False otherwise
      
      procedure PositionOnTask(sTaskID)
      
      bFound is boolean = False
      
      TaskFirst(SessionID)
      while not mTask.Out
      	
      	if mTask.ID = sTaskID then
      		bFound=True
      		break
      	end
      	
      	TaskNext(SessionID)
      	
      end
      
      if bFound then 
      	return True
      else
      	return False
      end
     type : 458752
   -
     name : PositionOnAppointment
     procedure_id : 1407598333546460233
     type_code : 15
     code : |1-
      // Summary: Positions on the appointment whose identifier is passed in parameter
      // Syntax:
      //[ <Result> = ] PositionOnAppointment (<sIdAPT>)
      //
      // Parameters:
      //	sIdAPT: Identifier of the appointment onto which we want to be positioned
      // Return value:
      // 	boolean: True if it was found, False otherwise
      
      procedure PositionOnAppointment(sIdAPT)
      
      bFound is boolean = False
      
      AppointmentFirst(SessionID)
      while not mAppointment.Out
      	
      	if mAppointment.ID = sIdAPT then 
      		bFound=True
      		break
      	end
      	
      	AppointmentNext(SessionID)
      end
      
      if bFound then 
      	return True
      else
      	return False
      end
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : ProceduresGlobales
resources :
 string_res :
  identifier : 0x10f6cb0d07835beb
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
